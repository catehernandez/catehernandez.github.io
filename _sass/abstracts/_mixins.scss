@mixin font-face($name, $weight, $style) {
  font-family: $name;
  font-weight: $weight;
  font-style: $style;
}

/// Underline link. Predefined thickeness for consitency
/// @param {Array} $color
@mixin thick-underline($color) {
  border-bottom: 4px solid $color;
}

/// Underlines link on hover effect
/// @author Rene Spronk
/// @param {String} $color
@mixin animated-hover-underline($color) {
  //animate link underline on hover
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0%;
    border-bottom: 1.5px solid $color;
    transition: 1s;
  }

  &:hover::after {
    width: 100%;
  }
}

/* Breakpoints follow bootstrap 4 */
$breakpoints: (
  'small': 576px,
  'medium': 767px,
  'large': 992px,
  'x-large': 1200px
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
